# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Tiddler
scopeName: text.tid
fileTypes: [tid]
uuid: fdab77cb-d4fe-4df4-9db4-2e78e09c092c


patterns:
- comment: Tiddler field names.
  name: constant.language.tid
  match: '^\w+\:'
- comment: Macro definitions.
  begin: '(\\define)\s(.+)\s*\('
  captures:
    '1': {name: constant.language.tid}
    '2': {name: support.function}
  end: \)
  patterns:
  - {include: '#MacroParam'}
- comment: Macro end
  match: '^\\end'
  name: constant.language.tid
- comment: XML comment
  begin: <[!%]--
  captures:
    '0': {name: punctuation.definition.comment.xml}
  end: --%?>
  name: comment.block.tid
- comment: XML tags
  begin: (</?)(?:([-_a-zA-Z0-9]+)((:)))?([-_a-zA-Z0-9:]+)
  captures:
    '1': {name: punctuation.definition.tag.begin.xml}
    '2': {name: entity.name.tag.namespace.xml}
    '3': {name: entity.name.tag.xml}
    '4': {name: punctuation.separator.namespace.xml}
    '5': {name: entity.name.tag.localname.xml}
  end: (/?>)
  endCaptures:
    '1': {name: punctuation.definition.tag.end.xml}
  name: meta.tag.xml
  patterns:
  - {include: '#tagStuff'}
- comment: TW5 Widget tags
  begin: (</?)(\$)(?:([-_a-zA-Z0-9]+)((:)))?([-_a-zA-Z0-9:]+)
  captures:
    '1': {name: punctuation.definition.tag.begin.xml}
    '2': {name: constant.language.tid}
    '3': {name: entity.name.tag.namespace.xml}
    '4': {name: entity.name.tag.xml}
    '5': {name: punctuation.separator.namespace.xml}
    '6': {name: constant.language.tid}
  end: (/?>)
  endCaptures:
    '1': {name: punctuation.definition.tag.end.xml}
  name: meta.tag.xml
  patterns:
  - {include: '#tagStuff'}
  - {include: '#MacroInline'}
- comment: TW5 Macro call
  begin: (<<)([-_a-zA-Z0-9:]+)
  captures:
    '1': {name: punctuation.definition.tag.begin.xml}
    '2': {name: support.function}
  end: (>>)
  endCaptures:
    '1': {name: punctuation.definition.tag.end.xml}
repository:
  MacroParam:
    comment: TW5 Macro Parameters
    match: '\b([-_a-zA-Z0-9]+):'
    name: variable.parameter
  MacroInline:
    comment: TW5 Macro call
    begin: (<<)([-_a-zA-Z0-9:]+)
    captures:
      '1': {name: punctuation.definition.tag.begin.xml}
      '2': {name: support.function}
    end: (>>)
    endCaptures:
      '1': {name: punctuation.definition.tag.end.xml}
    patterns:
    - {include: '#doublequotedString'}
    - {include: '#singlequotedString'}
    - {include: '#MacroParam'}
  EntityDecl:
    begin: (<!)(ENTITY)\s+(%\s+)?([:a-zA-Z_][:a-zA-Z0-9_.-]*)(\s+(?:SYSTEM|PUBLIC)\s+)?
    captures:
      '1': {name: punctuation.definition.tag.begin.xml}
      '2': {name: keyword.entity.xml}
      '3': {name: punctuation.definition.entity.xml}
      '4': {name: variable.entity.xml}
      '5': {name: keyword.entitytype.xml}
    end: (>)
    patterns:
    - {include: '#doublequotedString'}
    - {include: '#singlequotedString'}
  bare-ampersand: {match: '&', name: invalid.illegal.bad-ampersand.xml}
  doublequotedString:
    begin: '"'
    beginCaptures:
      '0': {name: punctuation.definition.string.begin.xml}
    end: '"'
    endCaptures:
      '0': {name: punctuation.definition.string.end.xml}
    name: string.quoted.double.xml
    patterns:
    - {include: '#entity'}
    - {include: '#bare-ampersand'}
  entity:
    captures:
      '1': {name: punctuation.definition.constant.xml}
      '3': {name: punctuation.definition.constant.xml}
    match: (&)([:a-zA-Z_][:a-zA-Z0-9_.-]*|#[0-9]+|#x[0-9a-fA-F]+)(;)
    name: constant.character.entity.xml
  internalSubset:
    begin: (\[)
    captures:
      '1': {name: punctuation.definition.constant.xml}
    end: (\])
    name: meta.internalsubset.xml
    patterns:
    - {include: '#EntityDecl'}
    - {include: '#parameterEntity'}
  parameterEntity:
    captures:
      '1': {name: punctuation.definition.constant.xml}
      '3': {name: punctuation.definition.constant.xml}
    match: (%)([:a-zA-Z_][:a-zA-Z0-9_.-]*)(;)
    name: constant.character.parameter-entity.xml
  singlequotedString:
    begin: ''''
    beginCaptures:
      '0': {name: punctuation.definition.string.begin.xml}
    end: ''''
    endCaptures:
      '0': {name: punctuation.definition.string.end.xml}
    name: string.quoted.single.xml
    patterns:
    - {include: '#entity'}
    - {include: '#bare-ampersand'}
  tagStuff:
    patterns:
    - captures:
        '1': {name: entity.other.attribute-name.namespace.xml}
        '2': {name: entity.other.attribute-name.xml}
        '3': {name: punctuation.separator.namespace.xml}
        '4': {name: entity.other.attribute-name.localname.xml}
      match: ' (?:([-_a-zA-Z0-9]+)((:)))?([-_a-zA-Z0-9]+)='
    - {include: '#doublequotedString'}
    - {include: '#singlequotedString'}